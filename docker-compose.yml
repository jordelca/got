version: "3.1"
services:

  php:
    build: .docker/php
    container_name: ${PROJECT_NAME}-php
    working_dir: /application
    volumes:
      - .:/application
    ports:
      - "9000:9000"
    networks:
      - app

  nginx:
    image: nginx:alpine
    container_name: ${PROJECT_NAME}-nginx
    working_dir: /application
    depends_on:
      - php
    volumes:
        - .:/application
        - ./.docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        - .:/mysql/data
    ports:
      - 80:80
    networks:
      - app
    
  mysql:
    image: mysql:8.0
    container_name: ${PROJECT_NAME}-mysql
    working_dir: /mysql/data
    volumes:
      - .:/application
      - ./docker/mysql/custom-mysql.cnf:/etc/mysql/conf.d/custom-mysql.cnf
      - ./.db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    networks:
      - app

  elastic:
    image: elasticsearch:8.8.0
    container_name: ${PROJECT_NAME}-elasticsearch
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - transport.host=127.0.0.1
    networks:
      - app

  elasticvue:
    image: cars10/elasticvue:latest
    container_name: ${PROJECT_NAME}-elasticvue
    ports:
      - 8080:8080
    networks:
      - app

  rabbitmq:
    image: rabbitmq:3-management
    container_name: ${PROJECT_NAME}-rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - app

volumes:
  rabbitmq-data:
    driver: local

networks:
  app:
    driver: bridge
